int x = 50, y = 50, w = 400, h = 500, cells[][], picked;
String txt = "A huge lizard was discovered drinking out of the fountain today. It was not menacing anyone, it was just very thirsty. A small crowd gathered and whispered to one another, as though the lizard would understand them if they spoke in normal voices. The lizard seemed not even a little perturbed by their gathering. It drank and drank, its long forked tongue was like a red river hypnotizing the people, keeping them in a trance-like state. 'It's like a different town,' one of them whispered. 'Change is good,' the other one whispered back.";
RiText[] rts;

void setup() {
	size(600, 800);
	RiText.defaultFont("Georgia", 16, 22);
	txt += "</p>" + txt; // add a paragraph
	rts = RiText.createLines(txt, x, y, w, h);
	layout(rts);
	select(cells[5][5]);
}

void draw() {
	background(255);
	noFill();
	rect(x, y, w, h);
	RiText.drawAll();
}

void layout(lines) {

	cells = new RiText[rts.length][];
	for(int y = 0; y < rts.length; y++) {
		cells[y] = lines[y].splitWords();
		RiText.dispose(lines[y]);
	}
	println(RiText.instances.length + " RiTexts created");
}

void select(it) {
	RiText.foreach( function(rt) { 
		rt.boundingBox(0); rt.fill(0); 
	});
	it.fill(200, 0, 0);
	neighborhood(it);
	//RiText[] n = neighborhood(it);
	/*
	for(int y = 0; y < n.length; y++) 
		n[y].boundingBox(1);*/
}

void mouseMoved() {
	RiText rt = contains(mouseX, mouseY);
	if (rt) select(rt);
}

RiText contains(mx, my) {
	RiText[] rts = RiText.picked(mx, my);
	return rts ? rts[0] : null;
}

// RiText[] neighborhood(RiText center) {
// 	console.log("neighborhood");
// 	return null;
// }